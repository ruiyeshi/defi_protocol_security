#!/usr/bin/env python3
"""
fetch_contract_registry_expanded.py
-----------------------------------
Expands the protocol registry to top 300 protocols from DeFiLlama
with verified EVM-compatible chain mapping.
"""

import requests, pandas as pd
from pathlib import Path
from tqdm import tqdm

OUT = Path("data_raw/contracts/contract_registry.csv")
OUT.parent.mkdir(parents=True, exist_ok=True)

# === 1. Load from DeFiLlama ===
print("üåç Fetching top protocols from DeFiLlama...")
resp = requests.get("https://api.llama.fi/protocols").json()

df = pd.DataFrame(resp)
df = df.sort_values("tvl", ascending=False).head(300)

# === 2. Extract addresses per chain (EVM chains only) ===
evm_chains = ["Ethereum", "BSC", "Polygon", "Arbitrum", "Optimism", "Avalanche", "Base"]

rows = []
for _, r in tqdm(df.iterrows(), total=len(df)):
    name = r.get("name")
    chains = r.get("chains", [])
    for c in chains:
        if c in evm_chains:
            rows.append({
                "protocol_name": name,
                "chain": c.lower(),
                "contract_address": ""  # placeholder for fetch_contracts_extended.py to fill
            })

out = pd.DataFrame(rows)
out.to_csv(OUT, index=False)
print(f"‚úÖ Saved expanded registry ‚Üí {OUT} ({len(out)} rows)")