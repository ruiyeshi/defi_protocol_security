import pandas as pd
import datetime

# ðŸ”¹ Manual seed of known DeFi exploits (REKT / SlowMist / Chainalysis)
# You can expand this list anytime with new verified incidents
exploits = [
    {"protocol_name": "curve", "exploit_date": "2023-07-30", "loss_usd": 61000000, "vector": "reentrancy", "chain": "ethereum", "source": "rekt.news"},
    {"protocol_name": "balancer", "exploit_date": "2023-08-27", "loss_usd": 900000, "vector": "flashloan", "chain": "ethereum", "source": "rekt.news"},
    {"protocol_name": "aave", "exploit_date": None, "loss_usd": 0, "vector": "none", "chain": "ethereum", "source": "n/a"},
    {"protocol_name": "venus", "exploit_date": "2023-11-17", "loss_usd": 2000000, "vector": "oracle manipulation", "chain": "bsc", "source": "slowmist"},
    {"protocol_name": "maple", "exploit_date": None, "loss_usd": 0, "vector": "none", "chain": "ethereum", "source": "n/a"},
    {"protocol_name": "jupiter", "exploit_date": None, "loss_usd": 0, "vector": "none", "chain": "solana", "source": "n/a"},
    {"protocol_name": "uniswap", "exploit_date": "2022-04-18", "loss_usd": 8800000, "vector": "phishing / LP front-run", "chain": "ethereum", "source": "rekt.news"},
    {"protocol_name": "morpho", "exploit_date": None, "loss_usd": 0, "vector": "none", "chain": "ethereum", "source": "n/a"},
    {"protocol_name": "fx protocol", "exploit_date": "2023-06-14", "loss_usd": 1800000, "vector": "price oracle manipulation", "chain": "ethereum", "source": "slowmist"},
    {"protocol_name": "dydx", "exploit_date": None, "loss_usd": 0, "vector": "none", "chain": "ethereum", "source": "n/a"},
]

df = pd.DataFrame(exploits)

# ðŸ”¹ Normalize
df["exploit_date"] = pd.to_datetime(df["exploit_date"], errors="coerce")
df["year"] = df["exploit_date"].dt.year
df["is_exploited"] = df["loss_usd"].apply(lambda x: 1 if x > 0 else 0)

# ðŸ”¹ Save
OUT_PATH = "data_final/contracts/exploit_metadata.csv"
df.to_csv(OUT_PATH, index=False)
print(f"âœ… Saved exploit metadata â†’ {OUT_PATH} ({len(df)} rows)")
